name: CI

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: |
          pytest --cov=uc_micro --cov-report=xml --cov-report=term-missing
      - name: Upload to Codecov
        if: matrix.python-version == 3.8 && github.repository == 'tsutsu3/uc.micro-py'
        uses: codecov/codecov-action@v5
        with:
          name: uc.micro-py-pytests-py3.8
          flags: pytests
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build package test
        run: |
          pip install build
          python -m build
          if [ $(grep -o "\.py" uc_micro_py.egg-info/SOURCES.txt | wc -l) -eq 14 ]; then
              echo "Success build"
          else
              echo "Failed build"
              exit 1
          fi
      - name: Build package test (with tmp folder)
        run: |
          mkdir tmp
          pip install build
          python -m build
          if [ $(grep -o "\.py" uc_micro_py.egg-info/SOURCES.txt | wc -l) -eq 14 ]; then
              echo "Success build"
          else
              echo "Failed build"
              exit 1
          fi

  publish:
    name: Publish to PyPi
    needs: [pre-commit, test]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Build package
        run: |
          pip install build
          python -m build
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
